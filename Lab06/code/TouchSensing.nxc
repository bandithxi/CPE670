#ifndef __TOUCHSENSING_NXC__
#define __TOUCHSENSING_NXC__

#define TOUCH_DEBUG 0
#define TOUCH_MUXED 1

#if TOUCH_MUXED
  #define TOUCH_SENSOR 2  // same as: msensorS1_3
  #define TOUCH_WORM 1    // same as: msensorS1_2
#else
  #define TOUCH_SENSOR IN_3
#endif

typedef struct {
  bool value;
  bool leftValue;
  mutex ownership;
  bool readingIsValid;
} TouchReading;


bool gUseTouchSensing = false;
TouchReading gTouchReading;


task TASK_TouchSensing();
bool readTouchSensor(byte pPort);
void debugOutputTouch(const byte pTouchVal);


/**
 *  Spawns the thread responsible for publishing the touch sensor readings
 */
task TASK_TouchSensing() {
  #if TOUCH_MUXED
  #else
    SetSensorTouch(TOUCH_SENSOR);
  #endif //TOUCH_MUXED

  while (true) {
    until (gUseTouchSensing);
    while (gUseTouchSensing) {
      gTouchReading.value = readTouchSensor(TOUCH_SENSOR);
      gTouchReading.leftValue = readTouchSensor(TOUCH_WORM);

      #if TOUCH_DEBUG
        debugOutputTouch(gTouchReading.value);
      #endif //TOUCH_DEBUG
    }
  }
}

bool readTouchSensor(byte pPort) {
      #if TOUCH_MUXED
        return smuxReadSensorLegoTouch(pPort);
      #else
        return SensorValue(pPort);
      #endif //Touch_MUXED
}

void debugOutputTouch(const byte pTouchVal) {
  ClearScreen();
  TextOut(2, LCD_LINE1, "Touch Reading:");
  if (pTouchVal == 1) {
    TextOut(4, LCD_LINE2, "OUCH! THAT HURT!");
  } else {
    TextOut(4, LCD_LINE2, "NO TOUCH!");
  }
  Wait(MS_100);
}

#endif //__TOUCHSENSING_NXC__
